{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n//var Vue = require('vue');\n//\n//\n//var vm = new Vue({\n//    el: '#app',\n//    data: {\n//        message: 'Hello Vue.js!'\n//    }\n//});\n//\n//console.log(vm);\n//\n\nfunction toggleDatePicker() {\n    var target = $(this).data('date-toggle');\n    $('#' + target + '-date-picker').toggle(200);\n}\n\nfunction handleLogoUpload(form) {\n    var target = form.data('target');\n    var formData = new FormData(form[0]);\n    var method = form.find('input[name=\"_method\"]').val() || 'POST';\n    var submitButton = form.find('button[data-submit]');\n\n    $.ajax({\n        url: form.prop('action'),\n        type: method,\n        data: formData,\n        success: function success(data) {\n            $('#logo-img').attr('src', data.path);\n            form.find('.error').fadeOut(200);\n            demonstrateSuccessOnButton(submitButton);\n            changePanelStyle(data[target], $(\"#\" + form.data('target') + \"-panel\"));\n            $.publish('form.submitted', form);\n        },\n        error: function error(e) {\n            demonstrateSuccessOnButton(submitButton, false);\n            var errors = e.responseJSON.logo;\n            form.find(\".error span\").html('');\n            errors.forEach(function (error) {\n                form.find(\".error span\").html(error);\n            });\n            form.find('.error').fadeIn(200);\n        },\n        cache: false,\n        contentType: false,\n        processData: false\n    });\n\n    return false;\n}\n\nvar submitAjaxRequest = function submitAjaxRequest(e) {\n    var form = $(this);\n    var target = form.data('target');\n\n    var method = form.find('input[name=\"_method\"]').val() || 'POST';\n    var submitButton = form.find('button[data-submit]');\n    submitButton.prop('disabled', true);\n    submitButton.html('<div class=\"spinner\">' + '<div class=\"bounce1\"></div>' + '<div class=\"bounce2\"></div>' + '<div class=\"bounce3\"></div>' + '</div>');\n\n    if (target === \"logo\") {\n        handleLogoUpload(form);\n    } else {\n        $.ajax({\n            type: method,\n            url: form.prop('action'),\n            data: form.serialize(),\n            success: function success(data) {\n                demonstrateSuccessOnButton(submitButton);\n                if (target === \"changeOwner\") {\n                    var $ownerButton = $('button[data-job-id=' + data.jobId + ']');\n                    $ownerButton.attr('data-current-owner', data.newOwnerId);\n                    $ownerButton.html(data.newOwnerName);\n                    setTimeout(function () {\n                        form.find('[data-dismiss=modal]').click();\n                    }, 500);\n                } else {\n                    // ändra texten och klass på rutan så den ändrar stil\n                    changePanelStyle(data[target], $(\"#\" + form.data('target') + \"-panel\"));\n                }\n                $.publish('form.submitted', form);\n            },\n            error: function error(e) {\n                demonstrateSuccessOnButton(submitButton, false);\n                var errorMsg = form.find('.error');\n                errorMsg.find('span').html(e.statusText);\n                form.find('.error').fadeIn(200);\n            }\n\n        });\n    }\n\n    e.preventDefault();\n};\n\nfunction onLoadChangePanelStyle() {\n    var onCompanyPage = $('#companyPage').length;\n    if (onCompanyPage) {\n        var panels = ['paying', 'featured', 'logo'];\n        var isActive = false;\n        for (var i in panels) {\n            var $panel = $(\"#\" + panels[i] + \"-panel\");\n            if (panels[i] != 'logo') {\n                isActive = $panel.find('input[name=\"' + panels[i] + '\"]')[0].checked;\n            } else {\n                isActive = $panel.find('#logo-img').attr('src') ? true : false;\n            }\n            if (isActive) {\n                $panel.addClass('panel-success');\n                $panel.find(\".not-active\").hide();\n            } else {\n                $panel.addClass('panel-danger');\n                $panel.find(\".is-active\").hide();\n            }\n        }\n    }\n}\n\nfunction changePanelStyle(isActive, $panel) {\n    if (isActive) {\n        $panel.addClass('panel-success');\n        $panel.removeClass('panel-danger');\n        $panel.find(\".is-active\").fadeIn(200);\n        $panel.find(\".not-active\").hide();\n    } else {\n        $panel.removeClass('panel-success');\n        $panel.addClass('panel-danger');\n        $panel.find(\".is-active\").hide();\n        $panel.find(\".not-active\").fadeIn(200);\n    }\n}\n\nvar demonstrateSuccessOnButton = function demonstrateSuccessOnButton(button, success) {\n    success = typeof success !== 'undefined' ? success : 'true';\n\n    if (success) {\n        button.addClass('btn-success');\n        button.html('<i class=\"fa fa-check\"></i>');\n    } else {\n        button.addClass('btn-danger');\n        button.html('<i class=\"fa fa-times\"></i>');\n    }\n\n    setTimeout(function () {\n        button.removeClass('btn-success btn-danger');\n        button.html('Spara');\n        button.prop('disabled', false);\n    }, 1500);\n};\n\nvar setCurrentOwnerInSelect = function setCurrentOwnerInSelect() {\n    var currentOwner = $(this).data('current-owner');\n    var jobId = $(this).data('job-id');\n    var $modal = $('#jobOwnerModal');\n    $modal.find('#jobId').val(jobId);\n    var company = $modal.find('select option.companyOption[value=' + currentOwner + ']');\n    company.attr('selected', 'selected');\n};\n\n// Ladda upp en bild via summernote\nvar summernote = [];\nfunction sendFile(file) {\n    var formData = new FormData();\n    formData.append(\"photo\", file);\n\n    var $submitBtn = $(\".btn-submit[data-submit]\");\n    $submitBtn.prop('disabled', true);\n    $submitBtn.html('<div class=\"spinner\">' + '<div class=\"bounce1\"></div>' + '<div class=\"bounce2\"></div>' + '<div class=\"bounce3\"></div>' + '</div>');\n\n    $.ajax({\n        url: window.location.pathname + '/upload',\n        data: formData,\n        cache: false,\n        contentType: false,\n        processData: false,\n        dataType: \"json\",\n        type: 'POST',\n        success: function success(data) {\n            demonstrateSuccessOnButton($submitBtn);\n            var imgNode = document.createElement('img');\n            $(imgNode).attr('src', data.url);\n            summernote.summernote('insertNode', imgNode);\n        },\n        fail: function fail(data) {\n            demonstrateSuccessOnButton($submitBtn, false);\n            console.log(\"Fel: \", data);\n        }\n    });\n}\n\nvar toggleElement = function toggleElement() {\n    console.log('#' + $(this).data('target'));\n    $('#' + $(this).data('target')).toggle(250);\n};\n\n$.subscribe('form.submitted', function (e) {\n    $('.flash-message').fadeIn(500).delay(1500).fadeOut(500);\n});\n\n// event listeners\n$('form[data-remote]').on('submit', submitAjaxRequest);\n$('form input[data-date-toggle]').on('click', toggleDatePicker);\n$('[data-toggle=modal]').on('click', setCurrentOwnerInSelect);\n$('[data-toggle]').on('click', toggleElement);\n$('[data-confirm]').on('click', function (e) {\n    if (!confirm('Är du säker på att du vill ta bort detta? Detta går inte att ångra.')) e.preventDefault();\n});\n\n$(document).on('ready', function () {\n    $.ajaxSetup({\n        headers: { 'X-CSRF-Token': $('meta[name=_token]').attr('content') }\n    });\n    onLoadChangePanelStyle();\n\n    $('.summernote').summernote({\n        lang: 'sv-SE', // default: 'en-US'\n        height: 300, // set editor height\n        minHeight: null, // set minimum height of editor\n        disableDragAndDrop: true,\n        maximumImageFileSize: 1048576,\n        placeholder: 'Här beskriver du jobbets uppgifter, vad som förväntas av den jobbsökande, och kanske en kort företagsbeskrivning.',\n        fontNames: ['Arial', 'Arial Black', 'Courier New', 'Helvetica', 'Impact', 'Roboto', 'Tahoma', 'Times New Roman', 'Verdana'],\n        fontNamesIgnoreCheck: ['Roboto'],\n        toolbar: [\n        // [groupName, [list of button]]\n        ['style', ['bold', 'italic', 'underline', 'clear']], ['fontsize', ['fontsize']], ['fontname', ['fontname']], ['color', ['color']], ['para', ['ul', 'ol', 'paragraph']], ['insert', ['link']], ['misc', ['undo', 'redo']]]\n    });\n\n    summernote = $('.summernote-extended').summernote({\n        lang: 'sv-SE', // default: 'en-US'\n        height: 300, // set editor height\n        minHeight: null, // set minimum height of editor\n        disableDragAndDrop: false,\n        maximumImageFileSize: 1048576,\n        callbacks: {\n            onImageUpload: function onImageUpload(files, editor, welEditable) {\n                // upload image to server and create imgNode...\n                for (var i = files.length - 1; i >= 0; i--) {\n                    sendFile(files[i], editor, welEditable);\n                }\n            }\n        },\n        placeholder: 'Här beskriver du jobbets uppgifter, vad som förväntas av den jobbsökande, och kanske en kort företagsbeskrivning.',\n        fontNames: ['Arial', 'Arial Black', 'Courier New', 'Helvetica', 'Impact', 'Roboto', 'Tahoma', 'Times New Roman', 'Verdana'],\n        fontNamesIgnoreCheck: ['Roboto'],\n        toolbar: [\n        // [groupName, [list of button]]\n        ['style', ['bold', 'italic', 'underline', 'clear']], ['fontsize', ['fontsize']], ['fontname', ['fontname']], ['color', ['color']], ['para', ['ul', 'ol', 'paragraph', 'height']], ['insert', ['hr', 'link', 'picture', 'video']], ['misc', ['undo', 'redo', 'codeview']]]\n    });\n\n    //$('.modal').on('show.bs.modal', function () {\n    //    var scrollTop = $(window).scrollTop();\n    //    $(this).css({'top' : scrollTop + 50 +  'px'});\n    //})\n});\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\n/* jQuery Tiny Pub/Sub - v0.7 - 10/27/2011\r\n * http://benalman.com/\r\n * Copyright (c) 2011 \"Cowboy\" Ben Alman; Licensed MIT, GPL */\n\n(function ($) {\n\n    var o = $({});\n\n    $.subscribe = function () {\n        o.on.apply(o, arguments);\n    };\n\n    $.unsubscribe = function () {\n        o.off.apply(o, arguments);\n    };\n\n    $.publish = function () {\n        o.trigger.apply(o, arguments);\n    };\n})(jQuery);\n\n},{}]},{},[2,1]);\n"],"file":"bundle.js","sourceRoot":"/source/"}